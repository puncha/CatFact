plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.5.10'
}

def ktorVersion = "1.6.0"
group = 'me.puncha'
version = '0.0.1'

repositories {
    mavenCentral()
}

kotlin {
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        withJava()
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }
    js(LEGACY) {
        binaries.executable()
        browser {
            distribution {
                directory = file("../webJsCatFactApp/js/vendor/")
            }
            webpackTask {
                //output.libraryTarget = "umd"
            }
        }
    }

//    def hostOs = System.getProperty("os.name")
//    def isMingwX64 = hostOs.startsWith("Windows")
//    def nativeTarget
//    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
//    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
//    else if (isMingwX64) nativeTarget = mingwX64("native") {
//        binaries {
//            sharedLib {
//                baseName = "libkmCatFact" // on Windows
//            }
//        }
//    }
//    else throw new GradleException("Host OS is not supported in Kotlin/Native.")


    sourceSets {
        all {
            languageSettings {
                useExperimentalAnnotation('me.puncha.OptInAnnotation')
            }
        }

        androidMain {
            dependencies {
                implementation "io.ktor:ktor-client-android:${ktorVersion}"
            }
        }
        androidTest {

        }

        commonMain {
            dependencies {
                implementation "io.ktor:ktor-client-core:${ktorVersion}"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test')
            }
        }
        jvmMain {
            dependencies {
                implementation "io.ktor:ktor-client-java:$ktorVersion"
            }
        }
        jvmTest {

        }
        jsMain {
            dependencies {
                implementation "io.ktor:ktor-client-js:$ktorVersion"
            }
        }
        jsTest {
        }
//        nativeMain {
//            dependencies {
//                implementation "io.ktor:ktor-client-curl:$ktorVersion"
//            }
//        }
//        nativeTest {
//
//        }
    }
}
